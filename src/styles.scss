/* You can add global styles to this file, and also import other style files */

@use '@angular/material' as mat;

@tailwind base;
@tailwind components;
@tailwind utilities;

$light-theme: mat.define-theme((
        color: (
                theme-type: light,
                primary: mat.$azure-palette,
                tertiary: mat.$blue-palette,
                use-system-variables: true,
        ),
        density: (
                scale: 0,
        ),
        typography: (
                use-system-variables: true,
        )
));

$dark-theme: mat.define-theme((
        color: (
                theme-type: dark,
                primary: mat.$azure-palette,
                tertiary: mat.$blue-palette,
                use-system-variables: true,
        ),
));

@include mat.core();

:root {
  @include mat.all-component-themes($light-theme);
  @include mat.color-variants-backwards-compatibility($light-theme);
  @include mat.system-level-colors($light-theme);
  @include mat.system-level-typography($light-theme);

  @media (prefers-color-scheme: dark) {
    @include mat.all-component-colors($dark-theme);
    @include mat.color-variants-backwards-compatibility($dark-theme);
    @include mat.system-level-colors($dark-theme);
  }
}

@include mat.typography-hierarchy($light-theme);
@media (prefers-color-scheme: dark) {
  @include mat.typography-hierarchy($dark-theme);
}

.mdc-notched-outline__notch {
  border-right: none;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}


.btn-primary {
  @include mat.button-color($light-theme, $color-variant: primary);
  @media (prefers-color-scheme: dark) {
    @include mat.button-color($dark-theme, $color-variant: primary);
  }
}

.bg-error {
  background-color: mat.get-theme-color($light-theme, error-container);
  @media (prefers-color-scheme: dark) {
    background-color: mat.get-theme-color($dark-theme, error-container);
  }
}

.bg-surface-container {
  background-color: mat.get-theme-color($light-theme, surface-container);
  @media (prefers-color-scheme: dark) {
    background-color: mat.get-theme-color($dark-theme, surface-container);
  }
}

.text-on-surface {
  color: mat.get-theme-color($light-theme, on-surface);
  @media (prefers-color-scheme: dark) {
    color: mat.get-theme-color($dark-theme, on-surface);
  }
}

.text-on-error {
    color: mat.get-theme-color($light-theme, on-error-container);
    @media (prefers-color-scheme: dark) {
        color: mat.get-theme-color($dark-theme, on-error-container);
    }
}

.text-outline {
  color: mat.get-theme-color($light-theme, outline);
  @media (prefers-color-scheme: dark) {
    color: mat.get-theme-color($dark-theme, outline);
  }
}

.text-outline-variant {
  color: mat.get-theme-color($light-theme, outline-variant);
  @media (prefers-color-scheme: dark) {
    color: mat.get-theme-color($dark-theme, outline-variant);
  }
}
